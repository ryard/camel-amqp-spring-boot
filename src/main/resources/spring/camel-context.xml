<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans.xsd   http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <camelContext xmlns="http://camel.apache.org/schema/spring">

    <!--  main route to subscribe to AMQ broker with queue name, MyQueue0 -->
    <route id="incoming_route">
        <from id="amq_received" uri="amqp:queue:MyQueue0"/>
        <setHeader name="IncomingChannel" id="_setIncomingChannel">
            <simple>${body}</simple>
        </setHeader>
<!--        <process id="incoming_message_processor" ref="messageProcessor"/>-->
        <multicast id="_multicast">
            <to id="_to_amq" uri="direct:amq"/>
        </multicast>
        <!--  Logs to console -->
        <log id="amq_log_received" message="Received queue message from MyQueue0:  ${body}"/>
    </route>

    <!--  route to send message received from previous route to another queue  -->
    <route id="outgoing_route">
        <from id="amq_received" uri="direct:amq"/>
        <to id="amq_route_to_topic" uri="amqp:queue:NotMyQueue0?"/>
        <log id="amq_log_received2" message="Received queue message from NotMyQueue0:  ${body}"/>
    </route>

    </camelContext>

    <bean class="com.redhat.demo.MessageProcessor" id="messageProcessor"/>
    <bean id="_jmsConnectionFactory" class="org.apache.qpid.jms.JmsConnectionFactory">
        <property name="remoteURI" value="amqps://fuse-amq-broker-amqps-0-svc-rte-ns-simulatie.apps.ns-simulatie.cloudvs.nl:443?transport.trustStoreLocation=/keystore/client.ts&amp;transport.trustStorePassword=${MY_TS_PASSWORD}&amp;transport.verifyHost=false" />
        <property name="username" value="${MY_USERNAME}"/>
        <property name="password" value="${MY_PASSWORD}"/>
    </bean>

</beans>
